# Generated by Django 3.2.16 on 2022-11-03 16:54

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('journal', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('article_slug', models.SlugField(max_length=225)),
                ('refrence', tinymce.models.HTMLField()),
                ('abstract', models.CharField(max_length=300)),
                ('keywords', models.CharField(max_length=225)),
                ('funding_source', models.CharField(choices=[('self', 'self'), ('institute', 'institute'), ('research_agancy', 'research_agancy'), ('other', 'other')], max_length=100)),
                ('upload', models.FileField(blank=True, null=True, upload_to='foo/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'zip'])])),
                ('supplementary_file', models.FileField(blank=True, null=True, upload_to='foo/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'zip'])])),
                ('copyright_form', models.FileField(blank=True, null=True, upload_to='foo/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'pdf'])])),
                ('apc_receipt', models.CharField(blank=True, max_length=255, null=True)),
                ('reviewer_report', models.FileField(blank=True, null=True, upload_to='foo/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('published_article', models.FileField(blank=True, null=True, upload_to='foo/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('published_xml', models.FileField(blank=True, null=True, upload_to='foo/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['xml'])])),
                ('published_html', models.FileField(blank=True, null=True, upload_to='foo/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['html'])])),
                ('date_of_submission', models.DateField(blank=True, null=True)),
                ('date_of_acceptance', models.DateField(blank=True, null=True)),
                ('date_of_published', models.DateField(blank=True, null=True)),
                ('volume', models.CharField(blank=True, max_length=225, null=True)),
                ('issue', models.CharField(blank=True, max_length=225, null=True)),
                ('special_issue', models.CharField(max_length=225)),
                ('doi', models.URLField(blank=True, max_length=225, null=True)),
                ('article_status', models.CharField(choices=[('desc_rejected', 'desc_rejected'), ('revised_submission_required', 'revised_submission_required'), ('editor_assign_to_mamuscript', 'editor_assign_to_mamuscript'), ('mamuscript_under_peer_review_process', 'mamuscript_under_peer_review_process'), ('revision_1_required', 'revision_1_required'), ('revision_2_required', 'revision_2_required'), ('peer_reviewed_completed', 'peer_reviewed_completed'), ('copyright_from_submission_required', 'copyright_from_submission_required'), ('article_accpeted_from_publication', 'article_accpeted_from_publication'), ('rejected_after_peer_reviewed', 'rejected_after_peer_reviewed'), ('withdrawl', 'withdrawl'), ('payment_pending', 'payment_pending'), ('payment_verified', 'payment_verified'), ('preparing_gallery_proof', 'preparing_gallery_proof'), ('article_in_press', 'article_in_press'), ('article_published', 'article_published')], max_length=100)),
                ('citation', models.CharField(blank=True, max_length=225, null=True)),
                ('download_count', models.CharField(blank=True, max_length=225, null=True)),
                ('view_count', models.CharField(blank=True, max_length=225, null=True)),
                ('multiple_image_in', models.CharField(blank=True, max_length=225, null=True)),
                ('article_type', models.ManyToManyField(to='journal.ArticleType')),
                ('author_details', models.OneToOneField(limit_choices_to={'role__name': 'Author'}, on_delete=django.db.models.deletion.CASCADE, related_name='article_author_details', to=settings.AUTH_USER_MODEL)),
                ('editor_details', models.ForeignKey(blank=True, limit_choices_to={'role__name': 'Editor'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='article_editor_details', to=settings.AUTH_USER_MODEL)),
                ('journal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_scope', to='journal.journals')),
                ('page_number', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='article_page_number', to='journal.pagenumber')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArticleActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Approved', 'Approved'), ('Pending', 'Pending'), ('Rejected', 'Rejected')], default='Pending', max_length=10)),
                ('comment', models.TextField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Approver_article_feed', to=settings.AUTH_USER_MODEL)),
                ('article', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='article_activity', to='editorial.article')),
                ('commented_by', models.ForeignKey(blank=True, limit_choices_to={'role': 2}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='editor_article_feed', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
